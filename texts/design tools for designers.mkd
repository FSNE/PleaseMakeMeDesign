## Open Source Publishing: design tools for designers 

Much of the work (graphic) designers do, happens with software. And not 
just any software - the set of programs used is often limited to Adobe InDesign, Adobe Photoshop and Adobe Illustrator; maybe you've got 
Macromedia Dreamweaver and Macromedia Flash installed too. 

Since Adobe Inc. bought Macromedia, the standard working suite of 
designers anywhere in the world can be purchased through one single 
company. And even if Adobe continues to develop brilliant packages, it is 
discomforting that one single party is responsible for the development of 
virtually all digital design tools available. 

When I watched a friend laying out a document, fluently navigating from 
toolbox to property window and back, changing the size of a box in passing, 
tweaking a curve, layering an image, adjusting word spacing and 
placement, I started to understand that "becoming one with your extension" 
is in this case not science fiction, but practice. Like everyone else, we use 
computer programmes to write, read, listen, publish, edit and play. But 
more than often we do all these things at the same time and in connection 
to each other. It has become our natural habitat. We use software until we 
in-corporate its choreography. We make it disappear in the background. A 
seamless experience. 

My physiotherapist used the following analogy to explain how humans use 
tools to negotiate the space around their bodies: 

"If you prepare a sauce?" she said, "and stir it with a wooden spoon? you 
will be able to feel at which moment exactly the starch starts to burn to the bottom of the pan". 

A wooden spoon might not be the kind of glamour and glitter we post-human-cyborgs are looking for, but I think it is in this unspectacular way 
our daily operations with software help to make sense of our environment. 
Software produces culture at the same time as it is produced by culture. It is 
shaped through and locked into economic models of production and 
distribution. this is obviously as much true for a wooden spoon as it is for 
making animations in Flash but in proprietary software this "lock" is 
apparent in the crudest way possible. 

 > Do You Have The Right Plug-in Installed? 
 > It Looks Like You Are Writing A Letter! 
 > You Have Unused Icons On Your Desktop? 
 > PLEASE READ THIS SOFTWARE LICENSE AGREEMENT CAREFULLY 
 > BEFORE DOWNLOADING OR USING the SOFTWARE. 

With each possibility opened up by an operating system or software 
package, the space within which your design practice can take place, is 
circumscribed. Software is never politically neutral, nor are its aesthetics 
without colour: Each product prescribes use, and results in specific forms, 
sounds and shapes. It is therefore crucial that designers question those tools 
from the inside out, and investigate their workings as much as they can. 

But how could we understand what software does to our work and working 
patterns without being able to step away from it? What if our work is not 
only made with, but also by software? Can we think ourselves outside it? 
What if we would want to adjust, reinvent, change, alter our tools when 
those forms of use are prevented by extremely restrictive licenses? how 
could we even understand what software does to design aesthetics and 
working patterns without being able to step away from them to try out 
different ways of making things? 

Using Open Source software is not an as evident answer to those kind of 
questions for designers, as it might be for programmers or even DJ's. Most 
of us are trained to be consumers and not comfortable with actively 
interacting with software. Besides that, or as a result of that, Open Source 
software for design did not mature at the same pace as for example 
operating systems, networking- and sound editing tools did. As its evolution 
is for a large part based on voluntarily input from programmers, the 
projected use of those programs and interfaces reflects another culture of 
design altogether. 

 > "I'm laying out a technical book on small wind turbines in Scribus. 
 > There's a very dynamic thing that happens when small turbines furl out 
 > of the wind, and it's difficult to understand -- so we had the crazy 
 > idea of making a 'flip book' movie in the lower right hand corner...flip 
 > through the pages and watch the turbine furl. 
 > It seems to me I can -- extract frames from the video and sequentially 
 > number the photo files. Insert an image frame at the lower right hand 
 > corner of every right hand page, on the master page R. Write the script 
 > to increment the filename, and insert the image in the frame, then go to 
 > the next righthand page." 
 > (from the Scribus mailinglist) 

It might be, that the implementation of OSX helps to blur those lines. With 
the help of X-11 it is now relatively easy to use Linux software on Apple 
Macintosh computers, so that designers can work with various Open Source 
packages without having to leave their familiar environment behind. 

But let's take it a step further. Many of the tools Unix developers built for 
the production of technical documentation and scientific publications 
(softwares such as LaTeX for example) could be even more powerful in the 
hands of skilled designers. Picture the engineers' turbine furl flipbook... and 
you can imagine a continuum starting from a database back end (MySQL, 
PGSQL), to filtering with the help of XSLT resulting in automatically and 
dynamically produced documents in various formats: pdf, postscript, html, 
sgml etc. 

Graham Harwood described the Gimp (Open Source image processing 
software) as "Photoshop with its guts hanging out", painting a graphic 
image of what software can be more, than a user-friendly tool seamlessly 
doing its job. Open Source tools are not always "user friendly" in the usual 
sense of the word. Partially, because "user-friendliness" might mean 
else all together depending on the expectations of its users, and 
partially because most Open Source software is "work in progress" and this 
means it's cut-off points are not necessarily concealed. 

Within the Open Source Publishing project we try to think out loud about 
what other tools are possible and what is possible with other tools; to 
demonstrate ourselves and others what the possibilities and limitations of 
Open Source software are, how they can be tools to think and how they can 
be put to work in professional design environments. We try to be disciplined 
about the less exciting but much needed work of filing bugs and reporting 
back on our experiences, in order to find common ground with software 
developers and exchange ideas with the people developing our tools. 

We are ultimately interested in making differences, glitches, 
misunderstandings and hick ups productive. the trick seems to be to simply 
not expect the same experiences as the ones we are used to. 

 > "Everything you see I owe to spaghetti." 

Sophia Loren 

Licence: Art Libre